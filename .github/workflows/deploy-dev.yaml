name: Deploy Dev server

on:
  push:
    branches: ["develop"]

permissions: write-all

jobs:
  build:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.BE_CONFIG_ACCESS_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: |
          ./gradlew gd-yd-api:bootJar --stacktrace

      - name: Docker build
        run: |
          cd ./gd-yd-api
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_DEV_REPO }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_DEV_REPO }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: Dev Server Create remote directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_DEV_EC2_PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.AWS_DEV_EC2_PEM_KEY }}
          script: mkdir -p ~/gd-yd-springboot


      - name: copy source via ssh key
        uses: burnett01/rsync-deployments@7.0.1
        with:
          switches: -avzr --delete
          remote_path: ~/gd-yd-springboot
          remote_host: ${{ secrets.AWS_DEV_EC2_PUBLIC_IP }}
          remote_user: ec2-user
          remote_key: ${{ secrets.AWS_DEV_EC2_PEM_KEY }}


      - name: Dev Server Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_DEV_EC2_PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.AWS_DEV_EC2_PEM_KEY }}
          script: |
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            sudo docker stop $(sudo docker ps -a -q)
            sudo docker rm $(sudo docker ps -a -q)
            sudo docker rmi $(sudo docker images -q)
            sudo docker-compose -f ~/srv/ubuntu/docker-compose.yml pull
            sudo docker-compose -f ~/srv/ubuntu/docker-compose.yml up --build -d
            docker image prune -f